// Gradle plugins.
plugins {
    id 'org.springframework.boot'       version '2.2.7.RELEASE'     // Spring Boot support
    id 'nu.studer.jooq'                 version '3.0.3'             // Code generation from SQL schema
    id 'org.flywaydb.flyway'            version '6.1.0'             // Database change scripts
    id 'net.ltgt.apt'                   version '0.21'              // Annotation processor
    id 'io.franzbecker.gradle-lombok'   version '3.1.0'             // Simplifies the usage of the Lombok annotation processor
    id 'org.sonarqube'                  version '2.7.1'             // Help analyzing projects with SonarQube
//    id 'com.gradle.build-scan'          version '2.4.1'             // Provide deep insights to your build
}

// Configurable properties.
ext {
    applicationType = 'spring-boot'
    // Name and package identifier prefix for the entire project.
    baseProjectName = 'pwc_api'
    packagePrefix = 'com.pwc'
    debugPort = 5318
    pascalCaseSubprojectName = project.name.replaceAll("(-)([A-Za-z0-9])", {s -> s.getAt(2).toUpperCase()}).capitalize()
    databaseName = 'pwc_api'

    // Centralised library/language versions.
    versions = [
        java        : 12.0,
        springCloud : 'Finchley.RELEASE',
        mapStruct   : '1.3.0.Final',
        jooq        : '3.12.4',
        flyway      : '6.1.0',
        checkstyle  : '8.21',
    ]

    database = [
        name            : "${databaseName}",
        driver          : 'org.postgresql.Driver',
        url             : 'jdbc:postgresql://localhost:15432/app',
        user            : 'app',
        password        : 'secret',
        test_url        : 'jdbc:postgresql://localhost:15432/app_test',
        test_user       : 'app_test',
        test_password   : 'secret',
        schemas         : ['public'],
        defaultSchema   : 'public'
    ]

}

ext.AbstractFlywayTask = org.flywaydb.gradle.task.AbstractFlywayTask
ext.FlywayMigrateTask = org.flywaydb.gradle.task.FlywayMigrateTask
ext.FlywayCleanTask = org.flywaydb.gradle.task.FlywayCleanTask

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://plugins.gradle.org/m2' }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

// Dependencies
dependencies {
    compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')        // Java Persistence API for data access
    compile('org.springframework.boot:spring-boot-starter-web')             // Spring Boot MVC

    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.9')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.9.9')
    compile('com.fasterxml.jackson.core:jackson-databind:2.9.9')
    compile('org.reflections:reflections:0.9.11')
    compile('org.apache.commons:commons-pool2:2.8.0')

    compile('org.flywaydb:flyway-core')
    // compile('mysql:mysql-connector-java:8.0.20')
    compile('org.postgresql:postgresql:42.2.14')

    compile('com.zaxxer:HikariCP:3.2.0')                                     // Ultimate JDBC Connection Pool
    compile('io.springfox:springfox-swagger2:2.10.5')                        // Swagger for API docs
    compile('io.springfox:springfox-swagger-ui:2.10.5')                      // Swagger UI
    compile('io.springfox:springfox-data-rest:2.10.5')

    compile('org.apache.commons:commons-collections4:4.4')
    compile('commons-codec:commons-codec:1.13')
    compile('commons-io:commons-io:2.6')
    compile('org.apache.commons:commons-lang3:3.8')

    compile('org.slf4j:slf4j-api:1.7.30')
    compile('ch.qos.logback:logback-classic:1.2.3')
    compile('org.gnieh:logback-journal:0.3.0')
    compile("org.mapstruct:mapstruct-jdk8:${versions.mapStruct}")
    compile("org.mapstruct:mapstruct-processor:${versions.mapStruct}")

    annotationProcessor("org.mapstruct:mapstruct-processor:${versions.mapStruct}")
    compileOnly('org.projectlombok:lombok')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('commons-lang:commons-lang:2.6')
    testCompile('org.flywaydb.flyway-test-extensions:flyway-spring-test:5.0.0')
    testCompile('org.codehaus.groovy:groovy-all:2.5.0')
    testCompile('org.spockframework:spock-core:1.3-groovy-2.5')
    testCompile('org.spockframework:spock-spring:1.3-groovy-2.5')
    testCompile('org.mockito:mockito-core:3.0.0')
}

apply from: "${project.projectDir}/gradle/java.gradle"
apply from: "${project.projectDir}/gradle/spring-boot.gradle"
apply from: "${project.projectDir}/gradle/checkstyle.gradle"
apply from: "${project.projectDir}/gradle/jacoco.gradle"
// apply from: "${project.projectDir}/gradle/sonarqube.gradle"
apply from: "${project.projectDir}/gradle/flyway.gradle"
apply from: "${project.projectDir}/gradle/jooq.gradle"
